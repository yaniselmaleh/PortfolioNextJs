{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\n\nvar Test2 = /*#__PURE__*/function (_Component) {\n  _inherits(Test2, _Component);\n\n  var _super = _createSuper(Test2);\n\n  function Test2(props) {\n    var _this;\n\n    _classCallCheck(this, Test2);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoad: true\n    };\n    return _this;\n  }\n\n  _createClass(Test2, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoad == false) {\n        return __jsx(\"h1\", null, \"Hello World\");\n      }\n\n      return __jsx(\"p\", null, this.state.isLoad ? 'Masquer' : 'Afficher');\n    }\n  }]);\n\n  return Test2;\n}(Component);\n\nexport default Test2;","map":null,"metadata":{},"sourceType":"module"}